{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(target-dj-fetching-data)=\n",
    "# DataJoint pipeline: Fetching data as DataFrames\n",
    "\n",
    ":::{important}\n",
    "This guide assumes you have a [DataJoint pipeline deployed](target-dj-pipeline-deployment) with [data already ingested](target-dj-data-ingestion-processing).\n",
    ":::\n",
    "\n",
    "This guide builds upon the [Querying data](target-dj-querying-data) guide and provides further examples on fetching various kinds of data as `pandas.DataFrames` from the [Aeon DataJoint pipeline](target-aeon-dj-pipeline).\n",
    "\n",
    "You can also run this notebook online at [`works.datajoint.com`](https://works.datajoint.com/) using the following credentials:\n",
    " - Username: aeondemo\n",
    " - Password: aeon_djworks \n",
    "\n",
    "To access it, go to the Notebook tab at the top and in the File Browser on the left, navigate to `ucl-swc_aeon > docs > examples`, where this notebook `dj_fetching_data.ipynb` is located.\n",
    "\n",
    ":::{note}\n",
    "The examples here use the _social_ period of the [social0.2-aeon4](target-full-datasets) dataset which spans 2 weeks.\n",
    "To keep examples concise, we limit retrieval to the first 3 days for all data types except for position, which is restricted to the first light-dark cycle.\n",
    "\n",
    "If you are using a different dataset, be sure to replace the experiment name and parameters in the code below accordingly.\n",
    ":::"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "vscode": {
     "languageId": "plaintext"
    }
   },
   "source": [
    "## Import libraries and define variables and helper functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from datetime import datetime, time, timedelta\n",
    "import warnings\n",
    "\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as mcolors\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "\n",
    "from aeon.dj_pipeline import acquisition, streams, subject, tracking\n",
    "from aeon.dj_pipeline.analysis.block_analysis import (\n",
    "    Block,\n",
    "    BlockAnalysis,\n",
    "    BlockSubjectAnalysis,\n",
    "    BlockForaging\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ensure_ts_arr_datetime(array):\n",
    "    \"\"\"Ensure array is a numpy array of datetime64[ns] type.\"\"\"\n",
    "    if len(array) == 0:\n",
    "        return np.array([], dtype=\"datetime64[ns]\")\n",
    "    else:\n",
    "        return np.array(array, dtype=\"datetime64[ns]\")\n",
    "\n",
    "\n",
    "def next_light_dark_cycle(start_dt, light_off, light_on):\n",
    "    \"\"\"Return the nearest 24-hour window aligned with the start of a light/dark cycle. \"\"\"\n",
    "    date = start_dt.date()\n",
    "    light_off_dt = datetime.combine(date, time(light_off, 0))\n",
    "    light_on_dt = datetime.combine(date, time(light_on, 0))\n",
    "    if start_dt < light_off_dt:\n",
    "        new_start_dt = light_off_dt\n",
    "    elif start_dt < light_on_dt:\n",
    "        new_start_dt = light_on_dt\n",
    "    else:\n",
    "        next_day = date + timedelta(days=1)\n",
    "        new_start_dt = datetime.combine(next_day, time(light_off, 0))\n",
    "    new_end_dt = new_start_dt + timedelta(hours=24)\n",
    "    return new_start_dt, new_end_dt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "exp = {\n",
    "    \"name\": \"social0.2-aeon4\",\n",
    "    \"presocial_start\": \"2024-01-31 11:00:00\",\n",
    "    \"presocial_end\": \"2024-02-08 15:00:00\",\n",
    "    \"social_start\": \"2024-02-09 17:00:00\",\n",
    "    \"social_end\": \"2024-02-23 12:00:00\",\n",
    "    \"postsocial_start\": \"2024-02-25 18:00:00\",\n",
    "    \"postsocial_end\": \"2024-03-02 13:00:00\",\n",
    "}\n",
    "key = {\"experiment_name\": exp[\"name\"]}\n",
    "light_off, light_on = 7, 20  # 7am to 8pm\n",
    "cm2px = 5.2  # 1 cm = 5.2 px roughly for top camera\n",
    "dark_color = \"#555555\"\n",
    "light_color = \"#CCCCCC\"\n",
    "\n",
    "# Define periods\n",
    "periods = {\n",
    "    \"presocial\": (exp[\"presocial_start\"], exp[\"presocial_end\"]),\n",
    "    \"social\": (exp[\"social_start\"], exp[\"social_end\"]),\n",
    "    \"postsocial\": (exp[\"postsocial_start\"], exp[\"postsocial_end\"]),\n",
    "}\n",
    "# Select the social period and limit to first 3 days for brevity\n",
    "period_name = \"social\"\n",
    "start = periods[period_name][0]\n",
    "start_dt = datetime.strptime(start, \"%Y-%m-%d %H:%M:%S\")\n",
    "end_dt = start_dt + pd.Timedelta(days=3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Position data\n",
    "\n",
    "Raw [multi-animal SLEAP tracking data](target-multianimal-tracking) is stored in the `tracking.SLEAPTracking` tables.\n",
    "This data undergoes post-processing to denoise trajectories and correct identity swaps, but only for the anchor nodeâ€”in this case, the centroid. \n",
    "The corrected positions are then stored in the `tracking.DenoisedTracking` table. \n",
    "\n",
    "Here, we will extract these centroid positions from the `tracking.DenoisedTracking` table for each subject across all {term}`chunks <Acquisition Chunk>` occurring within the first 24-hour window aligned with the start of a light/dark cycle during the social period.\n",
    "\n",
    ":::{note}\n",
    "The full pose data with all tracked body parts can be fetched from the `tracking.SLEAPTracking.Part` table.\n",
    ":::"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Querying data from 2024-02-09 20:00:00 to 2024-02-10 20:00:00...\n",
      "  Retrieved 6487333 rows of position data\n"
     ]
    }
   ],
   "source": [
    "def load_position_data(\n",
    "    key: dict[str, str], period_start: str, period_end: str\n",
    ") -> pd.DataFrame:\n",
    "    \"\"\"Loads position data (centroid tracking) for a specified time period.\n",
    "\n",
    "    Args:\n",
    "        key (dict): Key to identify experiment data (e.g., {\"experiment_name\": \"Exp1\"}).\n",
    "        period_start (str): Start datetime of the time period.\n",
    "        period_end (str): End datetime of the time period.\n",
    "\n",
    "    Returns:\n",
    "        pd.DataFrame: DataFrame containing position data for the specified period.\n",
    "                     Returns an empty DataFrame if no data found.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        print(f\"  Querying data from {period_start} to {period_end}...\")\n",
    "        # Create chunk restriction for the time period\n",
    "        chunk_restriction = acquisition.create_chunk_restriction(\n",
    "            key[\"experiment_name\"], period_start, period_end\n",
    "        )\n",
    "        # Fetch centroid tracking data for the specified period\n",
    "        centroid_df = (\n",
    "            streams.SpinnakerVideoSource * tracking.DenoisedTracking.Subject\n",
    "            & key\n",
    "            & {\"spinnaker_video_source_name\": \"CameraTop\"}\n",
    "            & chunk_restriction\n",
    "        ).fetch(format=\"frame\")\n",
    "        centroid_df = centroid_df.reset_index()\n",
    "        centroid_df = centroid_df.rename(\n",
    "            columns={\n",
    "                \"subject_name\": \"identity_name\",\n",
    "                \"timestamps\": \"time\",\n",
    "                \"subject_likelihood\": \"identity_likelihood\",\n",
    "            }\n",
    "        )\n",
    "        centroid_df = centroid_df.explode(\n",
    "            [\"time\", \"identity_likelihood\", \"x\", \"y\", \"likelihood\"]\n",
    "        )\n",
    "        centroid_df = centroid_df[\n",
    "            [\n",
    "                \"time\",\n",
    "                \"experiment_name\",\n",
    "                \"identity_name\",\n",
    "                \"identity_likelihood\",\n",
    "                \"x\",\n",
    "                \"y\",\n",
    "                \"likelihood\",\n",
    "            ]\n",
    "        ].set_index(\"time\")\n",
    "        # Clean up the dataframe\n",
    "        if isinstance(centroid_df, pd.DataFrame) and not centroid_df.empty:\n",
    "            if \"spinnaker_video_source_name\" in centroid_df.columns:\n",
    "                centroid_df.drop(columns=[\"spinnaker_video_source_name\"], inplace=True)\n",
    "            centroid_df = centroid_df.sort_index()[period_start:period_end]\n",
    "            print(f\"  Retrieved {len(centroid_df)} rows of position data\")\n",
    "        else:\n",
    "            print(\"  No data found for the specified period\")\n",
    "        return centroid_df\n",
    "    except Exception as e:\n",
    "        print(\n",
    "            f\"  Error loading position data for {key['experiment_name']} ({period_start} \"\n",
    "            f\"to {period_end}): {e}\"\n",
    "        )\n",
    "        return pd.DataFrame()\n",
    "\n",
    "\n",
    "# Load position data\n",
    "# If this takes too long, consider changing light_dark_cycle_end to an earlier time\n",
    "light_dark_cycle_start, light_dark_cycle_end = next_light_dark_cycle(start_dt, light_off, light_on)\n",
    "position_df = load_position_data(key, light_dark_cycle_start, light_dark_cycle_end).sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>experiment_name</th>\n",
       "      <th>identity_name</th>\n",
       "      <th>identity_likelihood</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>likelihood</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-02-09 20:00:00.000</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.999994</td>\n",
       "      <td>179.181152</td>\n",
       "      <td>597.614685</td>\n",
       "      <td>0.977871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 20:00:00.000</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.999994</td>\n",
       "      <td>179.181152</td>\n",
       "      <td>597.614685</td>\n",
       "      <td>0.977871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 20:00:00.000</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>0.94294</td>\n",
       "      <td>1237.617676</td>\n",
       "      <td>576.79834</td>\n",
       "      <td>0.977871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 20:00:00.000</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>0.94294</td>\n",
       "      <td>1237.617676</td>\n",
       "      <td>576.79834</td>\n",
       "      <td>0.977871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 20:00:00.020</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>0.962744</td>\n",
       "      <td>1237.676514</td>\n",
       "      <td>576.779053</td>\n",
       "      <td>0.981167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-10 19:59:59.920</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.040165</td>\n",
       "      <td>1208.623779</td>\n",
       "      <td>531.122375</td>\n",
       "      <td>0.901075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-10 19:59:59.940</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.037304</td>\n",
       "      <td>1208.618652</td>\n",
       "      <td>531.125305</td>\n",
       "      <td>0.900917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-10 19:59:59.960</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.02502</td>\n",
       "      <td>1208.620117</td>\n",
       "      <td>531.122009</td>\n",
       "      <td>0.90098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-10 19:59:59.980</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.028876</td>\n",
       "      <td>1208.613281</td>\n",
       "      <td>531.119995</td>\n",
       "      <td>0.901786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-10 20:00:00.000</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>0.957639</td>\n",
       "      <td>1208.57666</td>\n",
       "      <td>531.117493</td>\n",
       "      <td>0.895605</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6487333 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                         experiment_name identity_name identity_likelihood  \\\n",
       "time                                                                         \n",
       "2024-02-09 20:00:00.000  social0.2-aeon4   BAA-1104048            0.999994   \n",
       "2024-02-09 20:00:00.000  social0.2-aeon4   BAA-1104048            0.999994   \n",
       "2024-02-09 20:00:00.000  social0.2-aeon4   BAA-1104049             0.94294   \n",
       "2024-02-09 20:00:00.000  social0.2-aeon4   BAA-1104049             0.94294   \n",
       "2024-02-09 20:00:00.020  social0.2-aeon4   BAA-1104049            0.962744   \n",
       "...                                  ...           ...                 ...   \n",
       "2024-02-10 19:59:59.920  social0.2-aeon4   BAA-1104048            0.040165   \n",
       "2024-02-10 19:59:59.940  social0.2-aeon4   BAA-1104048            0.037304   \n",
       "2024-02-10 19:59:59.960  social0.2-aeon4   BAA-1104048             0.02502   \n",
       "2024-02-10 19:59:59.980  social0.2-aeon4   BAA-1104048            0.028876   \n",
       "2024-02-10 20:00:00.000  social0.2-aeon4   BAA-1104048            0.957639   \n",
       "\n",
       "                                   x           y likelihood  \n",
       "time                                                         \n",
       "2024-02-09 20:00:00.000   179.181152  597.614685   0.977871  \n",
       "2024-02-09 20:00:00.000   179.181152  597.614685   0.977871  \n",
       "2024-02-09 20:00:00.000  1237.617676   576.79834   0.977871  \n",
       "2024-02-09 20:00:00.000  1237.617676   576.79834   0.977871  \n",
       "2024-02-09 20:00:00.020  1237.676514  576.779053   0.981167  \n",
       "...                              ...         ...        ...  \n",
       "2024-02-10 19:59:59.920  1208.623779  531.122375   0.901075  \n",
       "2024-02-10 19:59:59.940  1208.618652  531.125305   0.900917  \n",
       "2024-02-10 19:59:59.960  1208.620117  531.122009    0.90098  \n",
       "2024-02-10 19:59:59.980  1208.613281  531.119995   0.901786  \n",
       "2024-02-10 20:00:00.000   1208.57666  531.117493   0.895605  \n",
       "\n",
       "[6487333 rows x 6 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "position_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To visualise movement patterns across circadian phases, we will first downsample the position data to 1-second intervals and then plot each subject's position data segmented by light and dark periods."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Downsample position_df for plotting\n",
    "position_df_downsampled = (\n",
    "    position_df.groupby([\"identity_name\"], group_keys=False)\n",
    "    .resample(\"1s\")  # 1-second intervals\n",
    "    .first()\n",
    "    .dropna(subset=[\"x\", \"y\"])\n",
    ")\n",
    "# Compute time-of-day and flag dark vs light periods\n",
    "position_df_downsampled[\"tod\"] = (\n",
    "    position_df_downsampled.index.hour\n",
    "    + position_df_downsampled.index.minute / 60\n",
    "    + position_df_downsampled.index.second / 3600\n",
    "    + position_df_downsampled.index.microsecond / 1e6 / 3600\n",
    ")\n",
    "# Detect light/dark transitions and assign period IDs\n",
    "position_df_downsampled[\"is_dark\"] = (position_df_downsampled[\"tod\"] >= light_off) & (\n",
    "    position_df_downsampled[\"tod\"] < light_on\n",
    ")\n",
    "first_dark = position_df_downsampled.groupby(\"identity_name\")[\"is_dark\"].transform(\"first\")\n",
    "shifted = position_df_downsampled.groupby(\"identity_name\")[\"is_dark\"].shift().fillna(first_dark)\n",
    "position_df_downsampled[\"light_change\"] = position_df_downsampled[\"is_dark\"] != shifted\n",
    "position_df_downsampled[\"light_id\"] = (\n",
    "    position_df_downsampled.groupby(\"identity_name\")[\"light_change\"].cumsum().astype(int) + 1\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setup\n",
    "subjects = sorted(position_df_downsampled[\"identity_name\"].unique())\n",
    "n_subj = len(subjects)\n",
    "n_per = int(position_df_downsampled[\"light_id\"].max())\n",
    "# Create subplot grid\n",
    "fig, axes = plt.subplots(\n",
    "    nrows=n_subj,\n",
    "    ncols=n_per,\n",
    "    figsize=(2 * n_per, 2 * n_subj),\n",
    "    sharex=True,\n",
    "    sharey=True,\n",
    "    squeeze=False,\n",
    ")\n",
    "for i, subj in enumerate(subjects):\n",
    "    for j in range(1, n_per + 1):\n",
    "        ax = axes[i, j - 1]\n",
    "        sub = position_df_downsampled[\n",
    "            (position_df_downsampled.identity_name == subj) & (position_df_downsampled.light_id == j)\n",
    "        ]\n",
    "        if sub.empty:\n",
    "            ax.set_axis_off()\n",
    "            continue\n",
    "        col = dark_color if sub.is_dark.iloc[0] else light_color\n",
    "        ax.plot(sub[\"x\"].values, sub[\"y\"].values, color=col, linewidth=0.8, rasterized=True)\n",
    "        ax.set_aspect(\"equal\", \"box\")\n",
    "        ax.axis(\"off\")\n",
    "        if j == 1:\n",
    "            ax.text(\n",
    "                -0.15, 0.5, subj, transform=ax.transAxes, fontsize=10, va=\"center\", ha=\"right\", rotation=90\n",
    "            )\n",
    "\n",
    "# Add scale bar to bottom-right subplot\n",
    "last_ax = axes[-1, -1]\n",
    "length_px = 0.2 * 100 * cm2px\n",
    "xmin, xmax = last_ax.get_xlim()\n",
    "ymin, ymax = last_ax.get_ylim()\n",
    "x1 = xmax - 0.02 * (xmax - xmin)\n",
    "x0 = x1 - length_px\n",
    "y0 = ymin + 0.02 * (ymax - ymin)\n",
    "last_ax.plot([x0, x1], [y0, y0], \"k-\", lw=2)\n",
    "last_ax.text(\n",
    "    (x0 + x1) / 2,\n",
    "    y0 - 0.06 * (ymax - ymin),\n",
    "    \"0.2 m\",\n",
    "    va=\"top\",\n",
    "    ha=\"center\",\n",
    "    fontsize=8,\n",
    "    color=\"k\",\n",
    ")\n",
    "fig.suptitle(\"Downsampled position data across first 24-hour window\\naligned with the start of a light/dark cycle.\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Patch data\n",
    "\n",
    "For each {term}`Block`, we also compute and store [foraging patch](target-foraging-patch)-related data.\n",
    "The data includes:\n",
    "- **patch information** (`block_analysis.BlockAnalysis.Patch`): wheel timestamps, patch rate, and patch offset for each block\n",
    "- **subject patch data** (`block_analysis.BlockSubjectAnalysis.Patch`): subjects' interactions with patches, including information on their presence in patches (duration, timestamps, RFID detections), pellet consumption (count, timestamps), and wheel movement (distance travelled)\n",
    "- **subject patch preferences** (`block_analysis.BlockSubjectAnalysis.Preference`): preferences of subjects for different patches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_subject_patch_data(\n",
    "    key: dict[str, str], period_start: str, period_end: str\n",
    ") -> tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]:\n",
    "    \"\"\"Loads subject patch data for a specified time period.\n",
    "\n",
    "    Args:\n",
    "        key (dict): The key to filter the subject patch data.\n",
    "        period_start (str): The start time for the period.\n",
    "        period_end (str): The end time for the period.\n",
    "\n",
    "    Returns:\n",
    "        tuple: A tuple containing:\n",
    "            - patch_info (pd.DataFrame): Information about patches.\n",
    "            - block_subject_patch_data (pd.DataFrame): Data for the specified period.\n",
    "            - block_subject_patch_pref (pd.DataFrame): Preference data for the specified period.\n",
    "    \"\"\"\n",
    "    patch_info = (\n",
    "        BlockAnalysis.Patch()\n",
    "        & key\n",
    "        & f\"block_start >= '{period_start}'\"\n",
    "        & f\"block_start <= '{period_end}'\"\n",
    "    ).fetch(\n",
    "        \"block_start\",\n",
    "        \"patch_name\",\n",
    "        \"patch_rate\",\n",
    "        \"patch_offset\",\n",
    "        \"wheel_timestamps\",\n",
    "        as_dict=True,\n",
    "    )\n",
    "    block_subject_patch_data = (\n",
    "        BlockSubjectAnalysis.Patch()\n",
    "        & key\n",
    "        & f\"block_start >= '{period_start}'\"\n",
    "        & f\"block_start <= '{period_end}'\"\n",
    "    ).fetch(format=\"frame\")\n",
    "    block_subject_patch_pref = (\n",
    "        BlockSubjectAnalysis.Preference()\n",
    "        & key\n",
    "        & f\"block_start >= '{period_start}'\"\n",
    "        & f\"block_start <= '{period_end}'\"\n",
    "    ).fetch(format=\"frame\")\n",
    "    if patch_info:\n",
    "        patch_info = pd.DataFrame(patch_info)\n",
    "    if isinstance(block_subject_patch_data, pd.DataFrame) and not block_subject_patch_data.empty:\n",
    "        block_subject_patch_data.reset_index(inplace=True)\n",
    "    if isinstance(block_subject_patch_pref, pd.DataFrame) and not block_subject_patch_pref.empty:\n",
    "        block_subject_patch_pref.reset_index(inplace=True)\n",
    "    return patch_info, block_subject_patch_data, block_subject_patch_pref"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "block_patch_info, block_subject_patch_data, block_subject_patch_pref = load_subject_patch_data(key, start_dt, end_dt)\n",
    "# Drop NaNs in preference columns\n",
    "block_subject_patch_pref = block_subject_patch_pref.dropna(subset=[\"final_preference_by_time\", \"final_preference_by_wheel\"])\n",
    "# Validate subject count for pre/post-social blocks\n",
    "if period_name in [\"presocial\", \"postsocial\"] and not block_subject_patch_data.empty:\n",
    "    n_subjects = block_subject_patch_data.groupby(\"block_start\")[\"subject_name\"].nunique()\n",
    "    if (n_subjects != 1).any():\n",
    "        warnings.warn(\n",
    "            f\"{exp['name']} {period_name} blocks have >1 subject. Data may need cleaning.\"\n",
    "        )\n",
    "# Ensure timestamp arrays are datetime64[ns]\n",
    "for col in [\"pellet_timestamps\", \"in_patch_rfid_timestamps\", \"in_patch_timestamps\"]:\n",
    "    if col in block_subject_patch_data.columns:\n",
    "        block_subject_patch_data[col] = block_subject_patch_data[col].apply(ensure_ts_arr_datetime)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>block_start</th>\n",
       "      <th>patch_name</th>\n",
       "      <th>wheel_timestamps</th>\n",
       "      <th>patch_rate</th>\n",
       "      <th>patch_offset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-02-09 18:19:04.000000</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>[2024-02-09T18:19:04.000000000, 2024-02-09T18:...</td>\n",
       "      <td>0.0100</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-02-09 18:19:04.000000</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>[2024-02-09T18:19:04.000000000, 2024-02-09T18:...</td>\n",
       "      <td>0.0020</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-02-09 18:19:04.000000</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>[2024-02-09T18:19:04.000000000, 2024-02-09T18:...</td>\n",
       "      <td>0.0033</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-02-09 20:07:25.041984</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>[2024-02-09T20:07:25.060000000, 2024-02-09T20:...</td>\n",
       "      <td>0.0020</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-02-09 20:07:25.041984</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>[2024-02-09T20:07:25.060000000, 2024-02-09T20:...</td>\n",
       "      <td>0.0033</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>2024-02-12 14:31:02.005984</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>[2024-02-12T14:31:02.020000000, 2024-02-12T14:...</td>\n",
       "      <td>0.0033</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>2024-02-12 14:31:02.005984</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>[2024-02-12T14:31:02.020000000, 2024-02-12T14:...</td>\n",
       "      <td>0.0100</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>2024-02-12 16:53:14.000000</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>[2024-02-12T16:53:14.000000000, 2024-02-12T16:...</td>\n",
       "      <td>0.0020</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>2024-02-12 16:53:14.000000</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>[2024-02-12T16:53:14.000000000, 2024-02-12T16:...</td>\n",
       "      <td>0.0100</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>2024-02-12 16:53:14.000000</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>[2024-02-12T16:53:14.000000000, 2024-02-12T16:...</td>\n",
       "      <td>0.0033</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>114 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   block_start patch_name  \\\n",
       "0   2024-02-09 18:19:04.000000     Patch1   \n",
       "1   2024-02-09 18:19:04.000000     Patch2   \n",
       "2   2024-02-09 18:19:04.000000     Patch3   \n",
       "3   2024-02-09 20:07:25.041984     Patch1   \n",
       "4   2024-02-09 20:07:25.041984     Patch2   \n",
       "..                         ...        ...   \n",
       "109 2024-02-12 14:31:02.005984     Patch2   \n",
       "110 2024-02-12 14:31:02.005984     Patch3   \n",
       "111 2024-02-12 16:53:14.000000     Patch1   \n",
       "112 2024-02-12 16:53:14.000000     Patch2   \n",
       "113 2024-02-12 16:53:14.000000     Patch3   \n",
       "\n",
       "                                      wheel_timestamps  patch_rate  \\\n",
       "0    [2024-02-09T18:19:04.000000000, 2024-02-09T18:...      0.0100   \n",
       "1    [2024-02-09T18:19:04.000000000, 2024-02-09T18:...      0.0020   \n",
       "2    [2024-02-09T18:19:04.000000000, 2024-02-09T18:...      0.0033   \n",
       "3    [2024-02-09T20:07:25.060000000, 2024-02-09T20:...      0.0020   \n",
       "4    [2024-02-09T20:07:25.060000000, 2024-02-09T20:...      0.0033   \n",
       "..                                                 ...         ...   \n",
       "109  [2024-02-12T14:31:02.020000000, 2024-02-12T14:...      0.0033   \n",
       "110  [2024-02-12T14:31:02.020000000, 2024-02-12T14:...      0.0100   \n",
       "111  [2024-02-12T16:53:14.000000000, 2024-02-12T16:...      0.0020   \n",
       "112  [2024-02-12T16:53:14.000000000, 2024-02-12T16:...      0.0100   \n",
       "113  [2024-02-12T16:53:14.000000000, 2024-02-12T16:...      0.0033   \n",
       "\n",
       "     patch_offset  \n",
       "0            75.0  \n",
       "1            75.0  \n",
       "2            75.0  \n",
       "3            75.0  \n",
       "4            75.0  \n",
       "..            ...  \n",
       "109          75.0  \n",
       "110          75.0  \n",
       "111          75.0  \n",
       "112          75.0  \n",
       "113          75.0  \n",
       "\n",
       "[114 rows x 5 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "block_patch_info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>experiment_name</th>\n",
       "      <th>block_start</th>\n",
       "      <th>patch_name</th>\n",
       "      <th>subject_name</th>\n",
       "      <th>in_patch_timestamps</th>\n",
       "      <th>in_patch_time</th>\n",
       "      <th>in_patch_rfid_timestamps</th>\n",
       "      <th>pellet_count</th>\n",
       "      <th>pellet_timestamps</th>\n",
       "      <th>patch_threshold</th>\n",
       "      <th>wheel_cumsum_distance_travelled</th>\n",
       "      <th>period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[2024-02-09T18:26:44.600000000, 2024-02-09T18:...</td>\n",
       "      <td>756.60</td>\n",
       "      <td>[2024-02-09T18:26:45.736672000, 2024-02-09T18:...</td>\n",
       "      <td>39</td>\n",
       "      <td>[2024-02-09T18:26:50.373504000, 2024-02-09T18:...</td>\n",
       "      <td>[125.10144062824004, 125.98842043772429, 133.9...</td>\n",
       "      <td>[-0.0, 0.004602223261072957, 0.007670372101788...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[2024-02-09T18:21:10.200000000, 2024-02-09T18:...</td>\n",
       "      <td>570.18</td>\n",
       "      <td>[2024-02-09T18:21:11.452832000, 2024-02-09T18:...</td>\n",
       "      <td>26</td>\n",
       "      <td>[2024-02-09T18:28:57.907488000, 2024-02-09T18:...</td>\n",
       "      <td>[75.07162358109204, 186.27023735234684, 135.82...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[2024-02-09T18:20:10.400000000, 2024-02-09T18:...</td>\n",
       "      <td>123.32</td>\n",
       "      <td>[2024-02-09T18:20:12.097312000, 2024-02-09T18:...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>[-0.0, -0.004602223261073846, -0.0015340744203...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[2024-02-09T18:20:54.600000000, 2024-02-09T18:...</td>\n",
       "      <td>226.80</td>\n",
       "      <td>[2024-02-09T18:21:30.375328000, 2024-02-09T18:...</td>\n",
       "      <td>3</td>\n",
       "      <td>[2024-02-09T18:52:14.199488000, 2024-02-09T19:...</td>\n",
       "      <td>[1069.4286592499257, 694.8095229017808, 278.84...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[2024-02-09T18:20:03.940000000, 2024-02-09T18:...</td>\n",
       "      <td>138.78</td>\n",
       "      <td>[2024-02-09T18:25:59.113504000, 2024-02-09T18:...</td>\n",
       "      <td>1</td>\n",
       "      <td>[2024-02-09T19:30:22.688480000]</td>\n",
       "      <td>[331.8480024096391]</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[2024-02-12T17:01:34.760000000, 2024-02-12T17:...</td>\n",
       "      <td>94.98</td>\n",
       "      <td>[2024-02-12T17:01:35.372416000, 2024-02-12T17:...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>[-0.0, -0.00920444652214547, -0.00613629768143...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[2024-02-12T16:58:52.540000000, 2024-02-12T16:...</td>\n",
       "      <td>627.76</td>\n",
       "      <td>[2024-02-12T16:58:53.758496000, 2024-02-12T16:...</td>\n",
       "      <td>18</td>\n",
       "      <td>[2024-02-12T17:01:47.607488000, 2024-02-12T17:...</td>\n",
       "      <td>[128.88388967189582, 98.29740841703715, 138.54...</td>\n",
       "      <td>[-0.0, 0.0030681488407182655, 0.00306814884071...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[2024-02-12T16:53:55.360000000, 2024-02-12T16:...</td>\n",
       "      <td>1215.12</td>\n",
       "      <td>[2024-02-12T16:53:56.698656000, 2024-02-12T16:...</td>\n",
       "      <td>34</td>\n",
       "      <td>[2024-02-12T16:57:31.338496000, 2024-02-12T16:...</td>\n",
       "      <td>[245.09652119007265, 137.19851472663964, 129.5...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[2024-02-12T16:58:45.920000000, 2024-02-12T16:...</td>\n",
       "      <td>101.68</td>\n",
       "      <td>[2024-02-12T16:58:47.270432000, 2024-02-12T16:...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>[-0.0, 0.0, -0.006136297681431202, -0.00460222...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[2024-02-12T17:01:20.200000000, 2024-02-12T17:...</td>\n",
       "      <td>48.12</td>\n",
       "      <td>[2024-02-12T17:01:22.861888000, 2024-02-12T17:...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>228 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     experiment_name         block_start patch_name subject_name  \\\n",
       "0    social0.2-aeon4 2024-02-09 18:19:04     Patch1  BAA-1104048   \n",
       "1    social0.2-aeon4 2024-02-09 18:19:04     Patch1  BAA-1104049   \n",
       "2    social0.2-aeon4 2024-02-09 18:19:04     Patch2  BAA-1104048   \n",
       "3    social0.2-aeon4 2024-02-09 18:19:04     Patch2  BAA-1104049   \n",
       "4    social0.2-aeon4 2024-02-09 18:19:04     Patch3  BAA-1104048   \n",
       "..               ...                 ...        ...          ...   \n",
       "223  social0.2-aeon4 2024-02-12 16:53:14     Patch1  BAA-1104049   \n",
       "224  social0.2-aeon4 2024-02-12 16:53:14     Patch2  BAA-1104048   \n",
       "225  social0.2-aeon4 2024-02-12 16:53:14     Patch2  BAA-1104049   \n",
       "226  social0.2-aeon4 2024-02-12 16:53:14     Patch3  BAA-1104048   \n",
       "227  social0.2-aeon4 2024-02-12 16:53:14     Patch3  BAA-1104049   \n",
       "\n",
       "                                   in_patch_timestamps  in_patch_time  \\\n",
       "0    [2024-02-09T18:26:44.600000000, 2024-02-09T18:...         756.60   \n",
       "1    [2024-02-09T18:21:10.200000000, 2024-02-09T18:...         570.18   \n",
       "2    [2024-02-09T18:20:10.400000000, 2024-02-09T18:...         123.32   \n",
       "3    [2024-02-09T18:20:54.600000000, 2024-02-09T18:...         226.80   \n",
       "4    [2024-02-09T18:20:03.940000000, 2024-02-09T18:...         138.78   \n",
       "..                                                 ...            ...   \n",
       "223  [2024-02-12T17:01:34.760000000, 2024-02-12T17:...          94.98   \n",
       "224  [2024-02-12T16:58:52.540000000, 2024-02-12T16:...         627.76   \n",
       "225  [2024-02-12T16:53:55.360000000, 2024-02-12T16:...        1215.12   \n",
       "226  [2024-02-12T16:58:45.920000000, 2024-02-12T16:...         101.68   \n",
       "227  [2024-02-12T17:01:20.200000000, 2024-02-12T17:...          48.12   \n",
       "\n",
       "                              in_patch_rfid_timestamps  pellet_count  \\\n",
       "0    [2024-02-09T18:26:45.736672000, 2024-02-09T18:...            39   \n",
       "1    [2024-02-09T18:21:11.452832000, 2024-02-09T18:...            26   \n",
       "2    [2024-02-09T18:20:12.097312000, 2024-02-09T18:...             0   \n",
       "3    [2024-02-09T18:21:30.375328000, 2024-02-09T18:...             3   \n",
       "4    [2024-02-09T18:25:59.113504000, 2024-02-09T18:...             1   \n",
       "..                                                 ...           ...   \n",
       "223  [2024-02-12T17:01:35.372416000, 2024-02-12T17:...             0   \n",
       "224  [2024-02-12T16:58:53.758496000, 2024-02-12T16:...            18   \n",
       "225  [2024-02-12T16:53:56.698656000, 2024-02-12T16:...            34   \n",
       "226  [2024-02-12T16:58:47.270432000, 2024-02-12T16:...             0   \n",
       "227  [2024-02-12T17:01:22.861888000, 2024-02-12T17:...             0   \n",
       "\n",
       "                                     pellet_timestamps  \\\n",
       "0    [2024-02-09T18:26:50.373504000, 2024-02-09T18:...   \n",
       "1    [2024-02-09T18:28:57.907488000, 2024-02-09T18:...   \n",
       "2                                                   []   \n",
       "3    [2024-02-09T18:52:14.199488000, 2024-02-09T19:...   \n",
       "4                      [2024-02-09T19:30:22.688480000]   \n",
       "..                                                 ...   \n",
       "223                                                 []   \n",
       "224  [2024-02-12T17:01:47.607488000, 2024-02-12T17:...   \n",
       "225  [2024-02-12T16:57:31.338496000, 2024-02-12T16:...   \n",
       "226                                                 []   \n",
       "227                                                 []   \n",
       "\n",
       "                                       patch_threshold  \\\n",
       "0    [125.10144062824004, 125.98842043772429, 133.9...   \n",
       "1    [75.07162358109204, 186.27023735234684, 135.82...   \n",
       "2                                                   []   \n",
       "3    [1069.4286592499257, 694.8095229017808, 278.84...   \n",
       "4                                  [331.8480024096391]   \n",
       "..                                                 ...   \n",
       "223                                                 []   \n",
       "224  [128.88388967189582, 98.29740841703715, 138.54...   \n",
       "225  [245.09652119007265, 137.19851472663964, 129.5...   \n",
       "226                                                 []   \n",
       "227                                                 []   \n",
       "\n",
       "                       wheel_cumsum_distance_travelled  period  \n",
       "0    [-0.0, 0.004602223261072957, 0.007670372101788...  social  \n",
       "1    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  social  \n",
       "2    [-0.0, -0.004602223261073846, -0.0015340744203...  social  \n",
       "3    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  social  \n",
       "4    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  social  \n",
       "..                                                 ...     ...  \n",
       "223  [-0.0, -0.00920444652214547, -0.00613629768143...  social  \n",
       "224  [-0.0, 0.0030681488407182655, 0.00306814884071...  social  \n",
       "225  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  social  \n",
       "226  [-0.0, 0.0, -0.006136297681431202, -0.00460222...  social  \n",
       "227  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  social  \n",
       "\n",
       "[228 rows x 12 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "block_subject_patch_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To visualise wheel distance spun by each subject at each foraging patch, we downsample the raw cumulative traces by computing the absolute difference between consecutive distance values and retaining only those points where the change exceeds 0.5 cm."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "dt_seconds = 0.02 # wheel sampling interval\n",
    "records = []\n",
    "# Flatten and downsample\n",
    "for (subject_name, patch), grp in block_subject_patch_data.groupby([\"subject_name\", \"patch_name\"]):\n",
    "    grp = grp.sort_values(\"block_start\")\n",
    "    offset = 0.0\n",
    "    for bs_val, arr in zip(grp.block_start, grp.wheel_cumsum_distance_travelled):\n",
    "        arr = np.asarray(arr)\n",
    "        n = arr.size\n",
    "        offs = (np.arange(n) * dt_seconds * 1e9).astype(\"timedelta64[ns]\")\n",
    "        times = np.datetime64(bs_val) + offs\n",
    "        dists = arr + offset\n",
    "        offset += arr[-1]\n",
    "        # Downsample: keep points where Î” > 0.5\n",
    "        diffs = np.abs(np.diff(dists, prepend=dists[0]))\n",
    "        mask = diffs > 0.5\n",
    "        mask[0] = True\n",
    "        for t, d in zip(times[mask], dists[mask]):\n",
    "            records.append({\n",
    "                \"time\": t,\n",
    "                \"distance_m\": d / 100,\n",
    "                \"subject\": subject_name,\n",
    "                \"patch\": patch\n",
    "            })\n",
    "\n",
    "# Build long-form DataFrame\n",
    "flat_df = pd.DataFrame.from_records(records)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "sns.lineplot(\n",
    "    data=flat_df,\n",
    "    x=\"time\",\n",
    "    y=\"distance_m\",\n",
    "    hue=\"subject\",\n",
    "    style=\"patch\",\n",
    "    linewidth=1.5\n",
    ")\n",
    "plt.ylabel(\"Distance spun on wheel (m)\")\n",
    "plt.xlabel(\"\")\n",
    "plt.title(\"Wheel Distance Over Time\")\n",
    "sns.despine()\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also plot the pellet delivery events for each subject."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = (\n",
    "    block_subject_patch_data[[\"subject_name\", \"patch_name\", \"pellet_timestamps\"]]\n",
    "    .explode(\"pellet_timestamps\")\n",
    "    .dropna(subset=[\"pellet_timestamps\"])\n",
    "    .copy()\n",
    ")\n",
    "df[\"pellet_timestamps\"] = pd.to_datetime(df[\"pellet_timestamps\"])\n",
    "df[\"patch_idx\"] = df[\"patch_name\"].str.extract(r\"(\\d+)$\")\n",
    "df[\"patch_idx\"] = pd.Categorical(df[\"patch_idx\"], ordered=True, categories=sorted(df[\"patch_idx\"].unique()))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.FacetGrid(\n",
    "    df,\n",
    "    col=\"subject_name\",\n",
    "    col_wrap=1,\n",
    "    aspect=4,\n",
    "    sharex=True,\n",
    ")\n",
    "g.map_dataframe(\n",
    "    sns.scatterplot,\n",
    "    x=\"pellet_timestamps\",\n",
    "    y=\"patch_idx\",\n",
    "    marker=\"|\",\n",
    "    color=dark_color,\n",
    "    s=300,\n",
    ")\n",
    "for ax in g.axes.flat:\n",
    "    ax.set_ylabel(\"Patch\")\n",
    "    ax.set_xlabel(\"\")\n",
    "    ax.grid(False)\n",
    "    ax.tick_params(axis=\"y\", left=False)\n",
    "    ax.set_title(ax.get_title().replace(\"subject_name = \", \"\"))\n",
    "g.fig.subplots_adjust(top=0.95)\n",
    "g.fig.suptitle(\"Pellet Delivery Raster by Subject\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>experiment_name</th>\n",
       "      <th>block_start</th>\n",
       "      <th>patch_name</th>\n",
       "      <th>subject_name</th>\n",
       "      <th>cumulative_preference_by_wheel</th>\n",
       "      <th>cumulative_preference_by_time</th>\n",
       "      <th>running_preference_by_time</th>\n",
       "      <th>running_preference_by_wheel</th>\n",
       "      <th>final_preference_by_wheel</th>\n",
       "      <th>final_preference_by_time</th>\n",
       "      <th>period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.758947</td>\n",
       "      <td>0.742711</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.548170</td>\n",
       "      <td>0.574604</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.096201</td>\n",
       "      <td>0.121056</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.251308</td>\n",
       "      <td>0.228560</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 18:19:04</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.144852</td>\n",
       "      <td>0.136232</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch1</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.038067</td>\n",
       "      <td>0.069930</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.831808</td>\n",
       "      <td>0.778163</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch2</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.955588</td>\n",
       "      <td>0.894642</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.162096</td>\n",
       "      <td>0.126041</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 16:53:14</td>\n",
       "      <td>Patch3</td>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n",
       "      <td>0.006345</td>\n",
       "      <td>0.035429</td>\n",
       "      <td>social</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>162 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     experiment_name         block_start patch_name subject_name  \\\n",
       "0    social0.2-aeon4 2024-02-09 18:19:04     Patch1  BAA-1104048   \n",
       "1    social0.2-aeon4 2024-02-09 18:19:04     Patch1  BAA-1104049   \n",
       "2    social0.2-aeon4 2024-02-09 18:19:04     Patch2  BAA-1104048   \n",
       "3    social0.2-aeon4 2024-02-09 18:19:04     Patch2  BAA-1104049   \n",
       "4    social0.2-aeon4 2024-02-09 18:19:04     Patch3  BAA-1104048   \n",
       "..               ...                 ...        ...          ...   \n",
       "223  social0.2-aeon4 2024-02-12 16:53:14     Patch1  BAA-1104049   \n",
       "224  social0.2-aeon4 2024-02-12 16:53:14     Patch2  BAA-1104048   \n",
       "225  social0.2-aeon4 2024-02-12 16:53:14     Patch2  BAA-1104049   \n",
       "226  social0.2-aeon4 2024-02-12 16:53:14     Patch3  BAA-1104048   \n",
       "227  social0.2-aeon4 2024-02-12 16:53:14     Patch3  BAA-1104049   \n",
       "\n",
       "                        cumulative_preference_by_wheel  \\\n",
       "0    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "1    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "2    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "3    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "4    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "..                                                 ...   \n",
       "223  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "224  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "225  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "226  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "227  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "\n",
       "                         cumulative_preference_by_time  \\\n",
       "0    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "1    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "2    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "3    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "4    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "..                                                 ...   \n",
       "223  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "224  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "225  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "226  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "227  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "\n",
       "                            running_preference_by_time  \\\n",
       "0    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "1    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "2    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "3    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "4    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "..                                                 ...   \n",
       "223  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "224  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "225  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "226  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "227  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "\n",
       "                           running_preference_by_wheel  \\\n",
       "0    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "1    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "2    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "3    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "4    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "..                                                 ...   \n",
       "223  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "224  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "225  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "226  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "227  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...   \n",
       "\n",
       "     final_preference_by_wheel  final_preference_by_time  period  \n",
       "0                     0.758947                  0.742711  social  \n",
       "1                     0.548170                  0.574604  social  \n",
       "2                     0.096201                  0.121056  social  \n",
       "3                     0.251308                  0.228560  social  \n",
       "4                     0.144852                  0.136232  social  \n",
       "..                         ...                       ...     ...  \n",
       "223                   0.038067                  0.069930  social  \n",
       "224                   0.831808                  0.778163  social  \n",
       "225                   0.955588                  0.894642  social  \n",
       "226                   0.162096                  0.126041  social  \n",
       "227                   0.006345                  0.035429  social  \n",
       "\n",
       "[162 rows x 11 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "block_subject_patch_pref"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Foraging bouts\n",
    "\n",
    "Based on `block_analysis.BlockSubjectAnalysis.Patch`, foraging boutsâ€”defined as time intervals in which a subject initiates at least 3 pellet deliveries and rotates the patch wheel by at least one full turn within a 60-second periodâ€”are identified and stored in the `block_analysis.BlockForaging.Bout` table.\n",
    "\n",
    "We will now retrieve the foraging bouts for each subject across all {term}`blocks <Block>` from this table."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_foraging_bouts(key: dict[str, str], period_start: str, period_end: str) -> pd.DataFrame:\n",
    "    \"\"\"Loads foraging bout data for blocks falling within a specified time period.\n",
    "\n",
    "    Args:\n",
    "        key (dict): Key to identify experiment data (e.g., {\"experiment_name\": \"Exp1\"}).\n",
    "        period_start (str): Start datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "        period_end (str): End datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "\n",
    "    Returns:\n",
    "        pd.DataFrame: Dataframe of foraging bouts for all matching blocks.\n",
    "                      Returns an empty dataframe with predefined columns if no data found.\n",
    "    \"\"\"\n",
    "    # Fetch bouts within the specified period\n",
    "    bouts_dict = (\n",
    "        Block * BlockForaging.Bout\n",
    "        & key\n",
    "        & f\"block_start >= '{period_start}'\"\n",
    "        & f\"block_end <= '{period_end}'\"\n",
    "    ).fetch(\"subject_name\", \"bout_start\", \"bout_end\", \"pellet_count\", \"cum_wheel_dist\", as_dict=True)\n",
    "    if bouts_dict:\n",
    "        return pd.DataFrame(bouts_dict).sort_values([\"bout_start\"])\n",
    "    else:\n",
    "        return pd.DataFrame(\n",
    "            columns=[\"subject_name\", \"bout_start\", \"bout_end\", \"pellet_count\", \"cum_wheel_dist\"]\n",
    "        )\n",
    "\n",
    "# Load foraging bouts\n",
    "foraging_df = load_foraging_bouts(key, start_dt, end_dt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>subject_name</th>\n",
       "      <th>bout_start</th>\n",
       "      <th>bout_end</th>\n",
       "      <th>pellet_count</th>\n",
       "      <th>cum_wheel_dist</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-09 18:39:17.180</td>\n",
       "      <td>2024-02-09 18:42:14.880</td>\n",
       "      <td>7</td>\n",
       "      <td>983.174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-09 18:48:14.880</td>\n",
       "      <td>2024-02-09 18:50:11.720</td>\n",
       "      <td>3</td>\n",
       "      <td>512.637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>2024-02-09 18:50:01.360</td>\n",
       "      <td>2024-02-09 18:54:16.560</td>\n",
       "      <td>8</td>\n",
       "      <td>1899.180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-09 19:03:35.840</td>\n",
       "      <td>2024-02-09 19:07:51.260</td>\n",
       "      <td>11</td>\n",
       "      <td>1979.470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>BAA-1104049</td>\n",
       "      <td>2024-02-09 19:09:47.100</td>\n",
       "      <td>2024-02-09 19:11:58.200</td>\n",
       "      <td>4</td>\n",
       "      <td>510.634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-12 16:03:42.420</td>\n",
       "      <td>2024-02-12 16:08:18.900</td>\n",
       "      <td>7</td>\n",
       "      <td>1275.080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-12 16:17:47.480</td>\n",
       "      <td>2024-02-12 16:21:39.080</td>\n",
       "      <td>4</td>\n",
       "      <td>1078.850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-12 16:24:17.660</td>\n",
       "      <td>2024-02-12 16:26:56.160</td>\n",
       "      <td>3</td>\n",
       "      <td>680.643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-12 16:30:04.740</td>\n",
       "      <td>2024-02-12 16:33:20.300</td>\n",
       "      <td>3</td>\n",
       "      <td>981.212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>BAA-1104048</td>\n",
       "      <td>2024-02-12 16:38:32.840</td>\n",
       "      <td>2024-02-12 16:43:16.600</td>\n",
       "      <td>3</td>\n",
       "      <td>2384.390</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>159 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    subject_name              bout_start                bout_end  \\\n",
       "0    BAA-1104048 2024-02-09 18:39:17.180 2024-02-09 18:42:14.880   \n",
       "1    BAA-1104048 2024-02-09 18:48:14.880 2024-02-09 18:50:11.720   \n",
       "5    BAA-1104049 2024-02-09 18:50:01.360 2024-02-09 18:54:16.560   \n",
       "2    BAA-1104048 2024-02-09 19:03:35.840 2024-02-09 19:07:51.260   \n",
       "6    BAA-1104049 2024-02-09 19:09:47.100 2024-02-09 19:11:58.200   \n",
       "..           ...                     ...                     ...   \n",
       "151  BAA-1104048 2024-02-12 16:03:42.420 2024-02-12 16:08:18.900   \n",
       "152  BAA-1104048 2024-02-12 16:17:47.480 2024-02-12 16:21:39.080   \n",
       "153  BAA-1104048 2024-02-12 16:24:17.660 2024-02-12 16:26:56.160   \n",
       "154  BAA-1104048 2024-02-12 16:30:04.740 2024-02-12 16:33:20.300   \n",
       "155  BAA-1104048 2024-02-12 16:38:32.840 2024-02-12 16:43:16.600   \n",
       "\n",
       "     pellet_count  cum_wheel_dist  \n",
       "0               7         983.174  \n",
       "1               3         512.637  \n",
       "5               8        1899.180  \n",
       "2              11        1979.470  \n",
       "6               4         510.634  \n",
       "..            ...             ...  \n",
       "151             7        1275.080  \n",
       "152             4        1078.850  \n",
       "153             3         680.643  \n",
       "154             3         981.212  \n",
       "155             3        2384.390  \n",
       "\n",
       "[159 rows x 5 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "foraging_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x200 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "subjects = sorted(foraging_df[\"subject_name\"].unique())[::-1]\n",
    "cmap = mpl.colormaps[\"viridis\"]  # or \"plasma\", \"magma\", \"Greys\"\n",
    "norm = mcolors.Normalize(vmin=foraging_df[\"pellet_count\"].min(), vmax=foraging_df[\"pellet_count\"].max())\n",
    "fig, ax = plt.subplots(figsize=(10, len(subjects)))\n",
    "for i, subj in enumerate(subjects):\n",
    "    bouts = foraging_df[foraging_df[\"subject_name\"] == subj]\n",
    "    for _, row in bouts.iterrows():\n",
    "        color = cmap(norm(row[\"pellet_count\"]))\n",
    "        ax.hlines(\n",
    "            y=i,\n",
    "            xmin=row[\"bout_start\"],\n",
    "            xmax=row[\"bout_end\"],\n",
    "            color=color,\n",
    "            linewidth=70\n",
    "            )\n",
    "ax.set_yticks(range(len(subjects)))\n",
    "ax.set_yticklabels(subjects)\n",
    "ax.set_xlabel(\"\")\n",
    "ax.set_ylabel(\"\")\n",
    "ax.set_title(\"Foraging Bouts\")\n",
    "sns.despine(left=True)\n",
    "ax.tick_params(axis=\"y\", which=\"both\", left=False)\n",
    "sm = cm.ScalarMappable(cmap=cmap, norm=norm)\n",
    "fig.colorbar(sm, ax=ax, label=\"Pellet Count\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## RFID data\n",
    "\n",
    "In this experiment, each subject is implanted with a miniature RFID microchip.\n",
    "RFID readers are positioned at the [foraging patches](target-foraging-patch), [nest](target-nest), and [gate](target-habitat).\n",
    "\n",
    "We will fetch the RFID detection data at each reader across all {term}`chunks <Acquisition Chunk>` occurring within the first 3 days of the social period."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_rfid_events(\n",
    "    key: dict[str, str], period_start: str, period_end: str\n",
    ") -> pd.DataFrame:\n",
    "    \"\"\"Loads RFID events data for chunks falling within a specified time period.\n",
    "\n",
    "    Args:\n",
    "        key (dict): Key to identify experiment data (e.g., {\"experiment_name\": \"Exp1\"}).\n",
    "        period_start (str): Start datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "        period_end (str): End datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "\n",
    "    Returns:\n",
    "        pd.DataFrame: DataFrame containing RFID events for the specified period.\n",
    "                      Returns an empty dataframe with predefined columns if no data found.\n",
    "    \"\"\"\n",
    "    # Fetch RFID events within the specified period\n",
    "    rfid_events_df = (\n",
    "        streams.RfidReader * streams.RfidReaderRfidEvents\n",
    "        & key\n",
    "        & f'chunk_start >= \"{period_start}\"'\n",
    "        & f'chunk_start <= \"{period_end}\"'\n",
    "    ).fetch(format=\"frame\")\n",
    "    if rfid_events_df.empty or not isinstance(rfid_events_df, pd.DataFrame):\n",
    "        # Return empty DataFrame with expected columns if no data found\n",
    "        return pd.DataFrame(\n",
    "            columns=[\n",
    "                \"experiment_name\",\n",
    "                \"chunk_start\",\n",
    "                \"rfid_reader_name\",\n",
    "                \"sample_count\",\n",
    "                \"timestamps\",\n",
    "                \"rfid\",\n",
    "            ]\n",
    "        )\n",
    "    # Get subject details for RFID mapping\n",
    "    subject_detail = subject.SubjectDetail.fetch(format=\"frame\")\n",
    "    subject_detail.reset_index(inplace=True)\n",
    "    # Create mapping from RFID to subject ID\n",
    "    rfid_to_lab_id = dict(zip(subject_detail[\"lab_id\"], subject_detail[\"subject\"]))\n",
    "    rfid_events_df[\"rfid\"] = [\n",
    "        [rfid_to_lab_id.get(str(rfid)) for rfid in rfid_array]\n",
    "        for rfid_array in rfid_events_df[\"rfid\"]\n",
    "    ]\n",
    "    # Extract experiment_name and chunk_start from the index before resetting\n",
    "    rfid_events_df[\"experiment_name\"] = [idx[0] for idx in rfid_events_df.index]\n",
    "    rfid_events_df[\"chunk_start\"] = [\n",
    "        idx[3] for idx in rfid_events_df.index\n",
    "    ]  # Assuming chunk_start is at index 3\n",
    "    # Reset the index and drop the index column\n",
    "    rfid_events_df = rfid_events_df.reset_index(drop=True)\n",
    "    # Reorder columns to put experiment_name first and chunk_start second\n",
    "    cols = [\"experiment_name\", \"chunk_start\"] + [\n",
    "        col\n",
    "        for col in rfid_events_df.columns\n",
    "        if col not in [\"experiment_name\", \"chunk_start\"]\n",
    "    ]\n",
    "    rfid_events_df = rfid_events_df[cols]\n",
    "    return rfid_events_df\n",
    "\n",
    "# Load RFID data\n",
    "rfid_df = load_rfid_events(key, start_dt, end_dt)\n",
    "rfid_df = rfid_df.explode([\"timestamps\", \"rfid\"]).set_index(\"timestamps\").sort_index()\n",
    "rfid_df = rfid_df[~rfid_df.index.isna()]\n",
    "rfid_df[\"rfid_reader_name\"] = pd.Categorical(rfid_df[\"rfid_reader_name\"], ordered=True, categories=sorted(rfid_df[\"rfid_reader_name\"].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>experiment_name</th>\n",
       "      <th>chunk_start</th>\n",
       "      <th>rfid_reader_name</th>\n",
       "      <th>sample_count</th>\n",
       "      <th>rfid</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamps</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:00:00.483007908</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 17:00:00</td>\n",
       "      <td>Patch1Rfid</td>\n",
       "      <td>844</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:00:14.564960003</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 17:00:00</td>\n",
       "      <td>NestRfid2</td>\n",
       "      <td>85</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:00:15.526688099</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>926</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:00:34.330624104</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 17:00:00</td>\n",
       "      <td>NestRfid1</td>\n",
       "      <td>163</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:00:40.345920086</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-09 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>926</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:48:49.640480042</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>1990</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:48:50.048992157</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>1990</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:48:50.416895866</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>1990</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:48:50.815360069</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 17:00:00</td>\n",
       "      <td>GateRfid</td>\n",
       "      <td>1990</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:49:00.042943954</th>\n",
       "      <td>social0.2-aeon4</td>\n",
       "      <td>2024-02-12 17:00:00</td>\n",
       "      <td>NestRfid1</td>\n",
       "      <td>28</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149763 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               experiment_name         chunk_start  \\\n",
       "timestamps                                                           \n",
       "2024-02-09 17:00:00.483007908  social0.2-aeon4 2024-02-09 17:00:00   \n",
       "2024-02-09 17:00:14.564960003  social0.2-aeon4 2024-02-09 17:00:00   \n",
       "2024-02-09 17:00:15.526688099  social0.2-aeon4 2024-02-09 17:00:00   \n",
       "2024-02-09 17:00:34.330624104  social0.2-aeon4 2024-02-09 17:00:00   \n",
       "2024-02-09 17:00:40.345920086  social0.2-aeon4 2024-02-09 17:00:00   \n",
       "...                                        ...                 ...   \n",
       "2024-02-12 17:48:49.640480042  social0.2-aeon4 2024-02-12 17:00:00   \n",
       "2024-02-12 17:48:50.048992157  social0.2-aeon4 2024-02-12 17:00:00   \n",
       "2024-02-12 17:48:50.416895866  social0.2-aeon4 2024-02-12 17:00:00   \n",
       "2024-02-12 17:48:50.815360069  social0.2-aeon4 2024-02-12 17:00:00   \n",
       "2024-02-12 17:49:00.042943954  social0.2-aeon4 2024-02-12 17:00:00   \n",
       "\n",
       "                              rfid_reader_name  sample_count         rfid  \n",
       "timestamps                                                                 \n",
       "2024-02-09 17:00:00.483007908       Patch1Rfid           844  BAA-1104048  \n",
       "2024-02-09 17:00:14.564960003        NestRfid2            85  BAA-1104049  \n",
       "2024-02-09 17:00:15.526688099         GateRfid           926  BAA-1104048  \n",
       "2024-02-09 17:00:34.330624104        NestRfid1           163  BAA-1104048  \n",
       "2024-02-09 17:00:40.345920086         GateRfid           926  BAA-1104048  \n",
       "...                                        ...           ...          ...  \n",
       "2024-02-12 17:48:49.640480042         GateRfid          1990  BAA-1104048  \n",
       "2024-02-12 17:48:50.048992157         GateRfid          1990  BAA-1104048  \n",
       "2024-02-12 17:48:50.416895866         GateRfid          1990  BAA-1104048  \n",
       "2024-02-12 17:48:50.815360069         GateRfid          1990  BAA-1104048  \n",
       "2024-02-12 17:49:00.042943954        NestRfid1            28  BAA-1104048  \n",
       "\n",
       "[149763 rows x 5 columns]"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfid_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "sns.scatterplot(\n",
    "    data=rfid_df,\n",
    "    x=\"timestamps\",\n",
    "    y=\"rfid_reader_name\",\n",
    "    hue=\"rfid\",\n",
    "    marker=\"|\",         # vertical tick\n",
    "    s=200,              # marker size\n",
    ")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.ylabel(\"RFID Reader\")\n",
    "plt.title(\"RFID Ping Raster by Reader and Subject\")\n",
    "plt.legend(title=\"Subject ID\", bbox_to_anchor=(0.97, 1), loc=\"upper left\")\n",
    "sns.despine()\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Weight data\n",
    "\n",
    "A weighing scale integrated into the [nest](target-nest) records the weight data for each subject whenever a subject is alone in the nest. \n",
    "\n",
    "Here we will fetch the weight data for each subject across all {term}`chunks <Acquisition Chunk>` occurring within the first 3 days of the social period."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_weight_data(\n",
    "    key: dict[str, str], period_start: str, period_end: str\n",
    ") -> pd.DataFrame:\n",
    "    \"\"\"Loads weight data for a specified time period.\n",
    "\n",
    "    Args:\n",
    "        key (dict): Key to identify experiment data (e.g., {\"experiment_name\": \"Exp1\"}).\n",
    "        period_start (str): Start datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "        period_end (str): End datetime of the time period (format: '%Y-%m-%d %H:%M:%S').\n",
    "\n",
    "    Returns:\n",
    "        pd.DataFrame: Weight data for the specified period.\n",
    "                      Returns an empty dataframe if no data found.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        weight_df = (\n",
    "            acquisition.Environment.SubjectWeight\n",
    "            & key\n",
    "            & f\"chunk_start >= '{period_start}'\"\n",
    "            & f\"chunk_start <= '{period_end}'\"\n",
    "        ).proj(\"timestamps\", \"weight\", \"subject_id\").fetch(format=\"frame\")\n",
    "        return weight_df if not weight_df.empty and isinstance(weight_df, pd.DataFrame) else pd.DataFrame()\n",
    "    except Exception as e:\n",
    "        print(\n",
    "            f\"Error loading weight data for {key} from {period_start} to {period_end}: {e}\"\n",
    "        )\n",
    "        return pd.DataFrame()\n",
    "\n",
    "\n",
    "weight_df = load_weight_data(key, start_dt, end_dt)\n",
    "weight_df = (\n",
    "    weight_df\n",
    "    .explode([\"timestamps\", \"weight\", \"subject_id\"])\n",
    "    .set_index(\"timestamps\")\n",
    "    .sort_index().dropna()\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weight</th>\n",
       "      <th>subject_id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamps</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:12:29.800000191</th>\n",
       "      <td>23.522316</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:12:29.900000095</th>\n",
       "      <td>23.522316</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:12:29.960000038</th>\n",
       "      <td>23.522316</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:12:30.039999962</th>\n",
       "      <td>23.522316</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-09 17:12:30.139999866</th>\n",
       "      <td>23.522316</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:41:37.019999981</th>\n",
       "      <td>24.553659</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:41:37.099999905</th>\n",
       "      <td>24.553659</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:41:37.199999809</th>\n",
       "      <td>24.553659</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:41:37.260000229</th>\n",
       "      <td>24.553659</td>\n",
       "      <td>BAA-1104048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02-12 17:47:25.719999790</th>\n",
       "      <td>29.904999</td>\n",
       "      <td>BAA-1104049</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>112235 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  weight   subject_id\n",
       "timestamps                                           \n",
       "2024-02-09 17:12:29.800000191  23.522316  BAA-1104049\n",
       "2024-02-09 17:12:29.900000095  23.522316  BAA-1104049\n",
       "2024-02-09 17:12:29.960000038  23.522316  BAA-1104049\n",
       "2024-02-09 17:12:30.039999962  23.522316  BAA-1104049\n",
       "2024-02-09 17:12:30.139999866  23.522316  BAA-1104049\n",
       "...                                  ...          ...\n",
       "2024-02-12 17:41:37.019999981  24.553659  BAA-1104048\n",
       "2024-02-12 17:41:37.099999905  24.553659  BAA-1104048\n",
       "2024-02-12 17:41:37.199999809  24.553659  BAA-1104048\n",
       "2024-02-12 17:41:37.260000229  24.553659  BAA-1104048\n",
       "2024-02-12 17:47:25.719999790  29.904999  BAA-1104049\n",
       "\n",
       "[112235 rows x 2 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weight_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 4))\n",
    "sns.lineplot(\n",
    "    data=df,\n",
    "    x=\"timestamps\",\n",
    "    y=\"weight\",\n",
    "    hue=\"subject_id\",\n",
    "    marker=\"o\",\n",
    "    linewidth=1.5,\n",
    "    markers=True,\n",
    ")\n",
    "plt.title(\"Subject Weights Over Time\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.ylabel(\"Weight\")\n",
    "plt.legend(title=\"Subject ID\")\n",
    "sns.despine()\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "aeon",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
